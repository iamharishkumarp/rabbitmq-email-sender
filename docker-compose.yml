version: '3.8'

services:
  web:
    build: .
    ports:
      - "5000:5000"
    environment:
      - RABBITMQ_HOST=rabbitmq
      - SQLALCHEMY_DATABASE_URI=postgresql://postgres:root@db/postgres
      - SMTP_SERVER=smtp.gmail.com
      - SMTP_PORT=587
      - SMTP_USERNAME=${SMTP_USERNAME}
      - SMTP_PASSWORD=${SMTP_PASSWORD}
    depends_on:
      - db
      - rabbitmq

  worker:
    build:
      context: .
      dockerfile: worker/Dockerfile
    environment:
      - RABBITMQ_HOST=rabbitmq
      - SMTP_SERVER=smtp.gmail.com
      - SMTP_PORT=587
      - SMTP_USER=${SMTP_USERNAME}
      - SMTP_PASSWORD=${SMTP_PASSWORD}
    depends_on:
      rabbitmq:
        condition: service_healthy
    restart: unless-stopped

  db:
    image: postgres:13
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=root
      - POSTGRES_DB=postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "check_port_connectivity"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data: 